// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.uca.iw.hoteloasis.domain;

import es.uca.iw.hoteloasis.domain.Rol;
import es.uca.iw.hoteloasis.domain.Usuario;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Usuario_Roo_Finder {
    
    public static Long Usuario.countFindUsuariosByRol(Rol rol) {
        if (rol == null) throw new IllegalArgumentException("The rol argument is required");
        EntityManager em = Usuario.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM Usuario AS o WHERE o.rol = :rol", Long.class);
        q.setParameter("rol", rol);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<Usuario> Usuario.findUsuariosByRol(Rol rol, String sortFieldName, String sortOrder) {
        if (rol == null) throw new IllegalArgumentException("The rol argument is required");
        EntityManager em = Usuario.entityManager();
        String jpaQuery = "SELECT o FROM Usuario AS o WHERE o.rol = :rol";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        TypedQuery<Usuario> q = em.createQuery(jpaQuery, Usuario.class);
        q.setParameter("rol", rol);
        return q;
    }
    
}
